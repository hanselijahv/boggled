package BoggledApp;


/**
* BoggledApp/BoggledPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from boggled.idl
* Thursday, May 9, 2024 12:20:24 PM CST
*/

public abstract class BoggledPOA extends org.omg.PortableServer.Servant
 implements BoggledApp.BoggledOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("login", new java.lang.Integer (0));
    _methods.put ("signup", new java.lang.Integer (1));
    _methods.put ("logout", new java.lang.Integer (2));
    _methods.put ("playGame", new java.lang.Integer (3));
    _methods.put ("sendWord", new java.lang.Integer (4));
    _methods.put ("isGameOver", new java.lang.Integer (5));
    _methods.put ("isRoundOver", new java.lang.Integer (6));
    _methods.put ("getSettings", new java.lang.Integer (7));
    _methods.put ("getRoundWinner", new java.lang.Integer (8));
    _methods.put ("getGameWinner", new java.lang.Integer (9));
    _methods.put ("getLeaderboards", new java.lang.Integer (10));
    _methods.put ("getGamePlayers", new java.lang.Integer (11));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // BoggledApp/Boggled/login
       {
         try {
           BoggledApp.Account player = BoggledApp.AccountHelper.read (in);
           this.login (player);
           out = $rh.createReply();
         } catch (BoggledApp.UserNotFoundException $ex) {
           out = $rh.createExceptionReply ();
           BoggledApp.UserNotFoundExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // BoggledApp/Boggled/signup
       {
         try {
           String username = in.read_string ();
           String password = in.read_string ();
           this.signup (username, password);
           out = $rh.createReply();
         } catch (BoggledApp.UserAlreadyExistsException $ex) {
           out = $rh.createExceptionReply ();
           BoggledApp.UserAlreadyExistsExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 2:  // BoggledApp/Boggled/logout
       {
         try {
           BoggledApp.Account player = BoggledApp.AccountHelper.read (in);
           this.logout (player);
           out = $rh.createReply();
         } catch (BoggledApp.NotLoggedInException $ex) {
           out = $rh.createExceptionReply ();
           BoggledApp.NotLoggedInExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 3:  // BoggledApp/Boggled/playGame
       {
         try {
           String username = in.read_string ();
           String $result = null;
           $result = this.playGame (username);
           out = $rh.createReply();
           out.write_string ($result);
         } catch (BoggledApp.InsufficientPlayersException $ex) {
           out = $rh.createExceptionReply ();
           BoggledApp.InsufficientPlayersExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 4:  // BoggledApp/Boggled/sendWord
       {
         try {
           String gameID = in.read_string ();
           String word = in.read_string ();
           this.sendWord (gameID, word);
           out = $rh.createReply();
         } catch (BoggledApp.InvalidWordException $ex) {
           out = $rh.createExceptionReply ();
           BoggledApp.InvalidWordExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 5:  // BoggledApp/Boggled/isGameOver
       {
         String gameID = in.read_string ();
         boolean $result = false;
         $result = this.isGameOver (gameID);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 6:  // BoggledApp/Boggled/isRoundOver
       {
         String gameID = in.read_string ();
         boolean $result = false;
         $result = this.isRoundOver (gameID);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 7:  // BoggledApp/Boggled/getSettings
       {
         BoggledApp.Settings $result = null;
         $result = this.getSettings ();
         out = $rh.createReply();
         BoggledApp.SettingsHelper.write (out, $result);
         break;
       }

       case 8:  // BoggledApp/Boggled/getRoundWinner
       {
         BoggledApp.RoundWinner $result = null;
         $result = this.getRoundWinner ();
         out = $rh.createReply();
         BoggledApp.RoundWinnerHelper.write (out, $result);
         break;
       }

       case 9:  // BoggledApp/Boggled/getGameWinner
       {
         BoggledApp.GameWinner $result = null;
         $result = this.getGameWinner ();
         out = $rh.createReply();
         BoggledApp.GameWinnerHelper.write (out, $result);
         break;
       }

       case 10:  // BoggledApp/Boggled/getLeaderboards
       {
         BoggledApp.GameWinner $result[] = null;
         $result = this.getLeaderboards ();
         out = $rh.createReply();
         BoggledApp.BoggledPackage.leaderboardsHelper.write (out, $result);
         break;
       }


  // optional for tab screen
       case 11:  // BoggledApp/Boggled/getGamePlayers
       {
         BoggledApp.GamePlayer $result[] = null;
         $result = this.getGamePlayers ();
         out = $rh.createReply();
         BoggledApp.BoggledPackage.gamePlayersHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:BoggledApp/Boggled:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Boggled _this() 
  {
    return BoggledHelper.narrow(
    super._this_object());
  }

  public Boggled _this(org.omg.CORBA.ORB orb) 
  {
    return BoggledHelper.narrow(
    super._this_object(orb));
  }


} // class BoggledPOA
