// This file is generated by omniidl (C++ backend) - omniORB_4_3. Do not edit.

#include "boggled.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

OMNI_MAYBE_UNUSED static const char* _0RL_library_version = omniORB_4_3;



::CORBA::Exception::insertExceptionToAny BoggledApp::UserNotFoundException::insertToAnyFn = 0;
::CORBA::Exception::insertExceptionToAnyNCP BoggledApp::UserNotFoundException::insertToAnyFnNCP = 0;

BoggledApp::UserNotFoundException::UserNotFoundException(const BoggledApp::UserNotFoundException& _s) : ::CORBA::UserException(_s)
{
  reason = _s.reason;

}

BoggledApp::UserNotFoundException::UserNotFoundException(const char* _reason)
{
  pd_insertToAnyFn    = BoggledApp::UserNotFoundException::insertToAnyFn;
  pd_insertToAnyFnNCP = BoggledApp::UserNotFoundException::insertToAnyFnNCP;
  reason = _reason;

}



BoggledApp::UserNotFoundException& BoggledApp::UserNotFoundException::operator=(const BoggledApp::UserNotFoundException& _s)
{
  if (&_s != this) {
    ((::CORBA::UserException*) this)->operator=(_s);
    reason = _s.reason;

  }
  return *this;
}

BoggledApp::UserNotFoundException::~UserNotFoundException() {}

void BoggledApp::UserNotFoundException::_raise() const { throw *this; }

const char* BoggledApp::UserNotFoundException::_PD_repoId = "IDL:BoggledApp/UserNotFoundException:1.0";
const char* BoggledApp::UserNotFoundException::_PD_typeId = "Exception/UserException/BoggledApp::UserNotFoundException";

BoggledApp::UserNotFoundException* BoggledApp::UserNotFoundException::_downcast(::CORBA::Exception* _e) {
  return (UserNotFoundException*) _NP_is_a(_e, _PD_typeId);
}

const BoggledApp::UserNotFoundException* BoggledApp::UserNotFoundException::_downcast(const ::CORBA::Exception* _e) {
  return (const UserNotFoundException*) _NP_is_a(_e, _PD_typeId);
}

::CORBA::Exception* BoggledApp::UserNotFoundException::_NP_duplicate() const {
  return new UserNotFoundException(*this);
}

const char* BoggledApp::UserNotFoundException::_NP_typeId() const {
  return _PD_typeId;
}

const char* BoggledApp::UserNotFoundException::_NP_repoId(int* _size) const {
  *_size = sizeof("IDL:BoggledApp/UserNotFoundException:1.0");
  return _PD_repoId;
}
 
void BoggledApp::UserNotFoundException::_NP_marshal(cdrStream& _s) const {
  *this >>= _s;
}

void
BoggledApp::UserNotFoundException::operator>>= (cdrStream& _n) const
{
  _n.marshalString(reason,0);

}

void
BoggledApp::UserNotFoundException::operator<<= (cdrStream& _n)
{
  reason = _n.unmarshalString(0);

}

::CORBA::Exception::insertExceptionToAny BoggledApp::AlreadyLoggedInException::insertToAnyFn = 0;
::CORBA::Exception::insertExceptionToAnyNCP BoggledApp::AlreadyLoggedInException::insertToAnyFnNCP = 0;

BoggledApp::AlreadyLoggedInException::AlreadyLoggedInException(const BoggledApp::AlreadyLoggedInException& _s) : ::CORBA::UserException(_s)
{
  reason = _s.reason;

}

BoggledApp::AlreadyLoggedInException::AlreadyLoggedInException(const char* _reason)
{
  pd_insertToAnyFn    = BoggledApp::AlreadyLoggedInException::insertToAnyFn;
  pd_insertToAnyFnNCP = BoggledApp::AlreadyLoggedInException::insertToAnyFnNCP;
  reason = _reason;

}



BoggledApp::AlreadyLoggedInException& BoggledApp::AlreadyLoggedInException::operator=(const BoggledApp::AlreadyLoggedInException& _s)
{
  if (&_s != this) {
    ((::CORBA::UserException*) this)->operator=(_s);
    reason = _s.reason;

  }
  return *this;
}

BoggledApp::AlreadyLoggedInException::~AlreadyLoggedInException() {}

void BoggledApp::AlreadyLoggedInException::_raise() const { throw *this; }

const char* BoggledApp::AlreadyLoggedInException::_PD_repoId = "IDL:BoggledApp/AlreadyLoggedInException:1.0";
const char* BoggledApp::AlreadyLoggedInException::_PD_typeId = "Exception/UserException/BoggledApp::AlreadyLoggedInException";

BoggledApp::AlreadyLoggedInException* BoggledApp::AlreadyLoggedInException::_downcast(::CORBA::Exception* _e) {
  return (AlreadyLoggedInException*) _NP_is_a(_e, _PD_typeId);
}

const BoggledApp::AlreadyLoggedInException* BoggledApp::AlreadyLoggedInException::_downcast(const ::CORBA::Exception* _e) {
  return (const AlreadyLoggedInException*) _NP_is_a(_e, _PD_typeId);
}

::CORBA::Exception* BoggledApp::AlreadyLoggedInException::_NP_duplicate() const {
  return new AlreadyLoggedInException(*this);
}

const char* BoggledApp::AlreadyLoggedInException::_NP_typeId() const {
  return _PD_typeId;
}

const char* BoggledApp::AlreadyLoggedInException::_NP_repoId(int* _size) const {
  *_size = sizeof("IDL:BoggledApp/AlreadyLoggedInException:1.0");
  return _PD_repoId;
}
 
void BoggledApp::AlreadyLoggedInException::_NP_marshal(cdrStream& _s) const {
  *this >>= _s;
}

void
BoggledApp::AlreadyLoggedInException::operator>>= (cdrStream& _n) const
{
  _n.marshalString(reason,0);

}

void
BoggledApp::AlreadyLoggedInException::operator<<= (cdrStream& _n)
{
  reason = _n.unmarshalString(0);

}

::CORBA::Exception::insertExceptionToAny BoggledApp::InsufficientPlayerException::insertToAnyFn = 0;
::CORBA::Exception::insertExceptionToAnyNCP BoggledApp::InsufficientPlayerException::insertToAnyFnNCP = 0;

BoggledApp::InsufficientPlayerException::InsufficientPlayerException(const BoggledApp::InsufficientPlayerException& _s) : ::CORBA::UserException(_s)
{
  reason = _s.reason;

}

BoggledApp::InsufficientPlayerException::InsufficientPlayerException(const char* _reason)
{
  pd_insertToAnyFn    = BoggledApp::InsufficientPlayerException::insertToAnyFn;
  pd_insertToAnyFnNCP = BoggledApp::InsufficientPlayerException::insertToAnyFnNCP;
  reason = _reason;

}



BoggledApp::InsufficientPlayerException& BoggledApp::InsufficientPlayerException::operator=(const BoggledApp::InsufficientPlayerException& _s)
{
  if (&_s != this) {
    ((::CORBA::UserException*) this)->operator=(_s);
    reason = _s.reason;

  }
  return *this;
}

BoggledApp::InsufficientPlayerException::~InsufficientPlayerException() {}

void BoggledApp::InsufficientPlayerException::_raise() const { throw *this; }

const char* BoggledApp::InsufficientPlayerException::_PD_repoId = "IDL:BoggledApp/InsufficientPlayerException:1.0";
const char* BoggledApp::InsufficientPlayerException::_PD_typeId = "Exception/UserException/BoggledApp::InsufficientPlayerException";

BoggledApp::InsufficientPlayerException* BoggledApp::InsufficientPlayerException::_downcast(::CORBA::Exception* _e) {
  return (InsufficientPlayerException*) _NP_is_a(_e, _PD_typeId);
}

const BoggledApp::InsufficientPlayerException* BoggledApp::InsufficientPlayerException::_downcast(const ::CORBA::Exception* _e) {
  return (const InsufficientPlayerException*) _NP_is_a(_e, _PD_typeId);
}

::CORBA::Exception* BoggledApp::InsufficientPlayerException::_NP_duplicate() const {
  return new InsufficientPlayerException(*this);
}

const char* BoggledApp::InsufficientPlayerException::_NP_typeId() const {
  return _PD_typeId;
}

const char* BoggledApp::InsufficientPlayerException::_NP_repoId(int* _size) const {
  *_size = sizeof("IDL:BoggledApp/InsufficientPlayerException:1.0");
  return _PD_repoId;
}
 
void BoggledApp::InsufficientPlayerException::_NP_marshal(cdrStream& _s) const {
  *this >>= _s;
}

void
BoggledApp::InsufficientPlayerException::operator>>= (cdrStream& _n) const
{
  _n.marshalString(reason,0);

}

void
BoggledApp::InsufficientPlayerException::operator<<= (cdrStream& _n)
{
  reason = _n.unmarshalString(0);

}

BoggledApp::Callback_ptr BoggledApp::Callback_Helper::_nil() {
  return ::BoggledApp::Callback::_nil();
}

::CORBA::Boolean BoggledApp::Callback_Helper::is_nil(::BoggledApp::Callback_ptr p) {
  return ::CORBA::is_nil(p);

}

void BoggledApp::Callback_Helper::release(::BoggledApp::Callback_ptr p) {
  ::CORBA::release(p);
}

void BoggledApp::Callback_Helper::marshalObjRef(::BoggledApp::Callback_ptr obj, cdrStream& s) {
  ::BoggledApp::Callback::_marshalObjRef(obj, s);
}

BoggledApp::Callback_ptr BoggledApp::Callback_Helper::unmarshalObjRef(cdrStream& s) {
  return ::BoggledApp::Callback::_unmarshalObjRef(s);
}

void BoggledApp::Callback_Helper::duplicate(::BoggledApp::Callback_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

BoggledApp::Callback_ptr
BoggledApp::Callback::_duplicate(::BoggledApp::Callback_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

BoggledApp::Callback_ptr
BoggledApp::Callback::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


BoggledApp::Callback_ptr
BoggledApp::Callback::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

BoggledApp::Callback_ptr
BoggledApp::Callback::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_Callback _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_Callback* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_Callback;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* BoggledApp::Callback::_PD_repoId = "IDL:BoggledApp/Callback:1.0";


BoggledApp::_objref_Callback::~_objref_Callback() {
  
}


BoggledApp::_objref_Callback::_objref_Callback(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::BoggledApp::Callback::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
BoggledApp::_objref_Callback::_ptrToObjRef(const char* id)
{
  if (id == ::BoggledApp::Callback::_PD_repoId)
    return (::BoggledApp::Callback_ptr) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::BoggledApp::Callback::_PD_repoId))
    return (::BoggledApp::Callback_ptr) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for BoggledApp::Callback::notify

// Proxy call descriptor class. Mangled signature:
//  void_i_cstring
class _0RL_cd_827d1af9c15327f0_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_827d1af9c15327f0_00000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  const char* arg_0;
};

void _0RL_cd_827d1af9c15327f0_00000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);

}

void _0RL_cd_827d1af9c15327f0_00000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();

}

const char* const _0RL_cd_827d1af9c15327f0_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_827d1af9c15327f0_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_827d1af9c15327f0_00000000* tcd = (_0RL_cd_827d1af9c15327f0_00000000*)cd;
  BoggledApp::_impl_Callback* impl = (BoggledApp::_impl_Callback*) svnt->_ptrToInterface(BoggledApp::Callback::_PD_repoId);
  impl->notify(tcd->arg_0);


}

void BoggledApp::_objref_Callback::notify(const char* message)
{
  _0RL_cd_827d1af9c15327f0_00000000 _call_desc(_0RL_lcfn_827d1af9c15327f0_10000000, "notify", 7);
  _call_desc.arg_0 = message;

  _invoke(_call_desc);



}

BoggledApp::_pof_Callback::~_pof_Callback() {}


omniObjRef*
BoggledApp::_pof_Callback::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::BoggledApp::_objref_Callback(ior, id);
}


::CORBA::Boolean
BoggledApp::_pof_Callback::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::BoggledApp::Callback::_PD_repoId))
    return 1;
  
  return 0;
}

const BoggledApp::_pof_Callback _the_pof_BoggledApp_mCallback;

BoggledApp::_impl_Callback::~_impl_Callback() {}


::CORBA::Boolean
BoggledApp::_impl_Callback::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "notify")) {

    _0RL_cd_827d1af9c15327f0_00000000 _call_desc(_0RL_lcfn_827d1af9c15327f0_10000000, "notify", 7, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
BoggledApp::_impl_Callback::_ptrToInterface(const char* id)
{
  if (id == ::BoggledApp::Callback::_PD_repoId)
    return (::BoggledApp::_impl_Callback*) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::BoggledApp::Callback::_PD_repoId))
    return (::BoggledApp::_impl_Callback*) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
BoggledApp::_impl_Callback::_mostDerivedRepoId()
{
  return ::BoggledApp::Callback::_PD_repoId;
}

BoggledApp::Boggled_ptr BoggledApp::Boggled_Helper::_nil() {
  return ::BoggledApp::Boggled::_nil();
}

::CORBA::Boolean BoggledApp::Boggled_Helper::is_nil(::BoggledApp::Boggled_ptr p) {
  return ::CORBA::is_nil(p);

}

void BoggledApp::Boggled_Helper::release(::BoggledApp::Boggled_ptr p) {
  ::CORBA::release(p);
}

void BoggledApp::Boggled_Helper::marshalObjRef(::BoggledApp::Boggled_ptr obj, cdrStream& s) {
  ::BoggledApp::Boggled::_marshalObjRef(obj, s);
}

BoggledApp::Boggled_ptr BoggledApp::Boggled_Helper::unmarshalObjRef(cdrStream& s) {
  return ::BoggledApp::Boggled::_unmarshalObjRef(s);
}

void BoggledApp::Boggled_Helper::duplicate(::BoggledApp::Boggled_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

BoggledApp::Boggled_ptr
BoggledApp::Boggled::_duplicate(::BoggledApp::Boggled_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

BoggledApp::Boggled_ptr
BoggledApp::Boggled::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


BoggledApp::Boggled_ptr
BoggledApp::Boggled::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

BoggledApp::Boggled_ptr
BoggledApp::Boggled::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_Boggled _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_Boggled* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_Boggled;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* BoggledApp::Boggled::_PD_repoId = "IDL:BoggledApp/Boggled:1.0";


BoggledApp::_objref_Boggled::~_objref_Boggled() {
  
}


BoggledApp::_objref_Boggled::_objref_Boggled(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::BoggledApp::Boggled::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
BoggledApp::_objref_Boggled::_ptrToObjRef(const char* id)
{
  if (id == ::BoggledApp::Boggled::_PD_repoId)
    return (::BoggledApp::Boggled_ptr) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::BoggledApp::Boggled::_PD_repoId))
    return (::BoggledApp::Boggled_ptr) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for BoggledApp::Boggled::login

// Proxy call descriptor class. Mangled signature:
//  void_i_cstring_i_cstring_e_cBoggledApp_mAlreadyLoggedInException_e_cBoggledApp_mUserNotFoundException
class _0RL_cd_827d1af9c15327f0_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_827d1af9c15327f0_20000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 2, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  void userException(cdrStream&, _OMNI_NS(IOP_C)*, const char*);
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  const char* arg_0;
  ::CORBA::String_var arg_1_;
  const char* arg_1;
};

void _0RL_cd_827d1af9c15327f0_20000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);
  _n.marshalString(arg_1,0);

}

void _0RL_cd_827d1af9c15327f0_20000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();
  arg_1_ = _n.unmarshalString(0);
  arg_1 = arg_1_.in();

}

const char* const _0RL_cd_827d1af9c15327f0_20000000::_user_exns[] = {
  BoggledApp::AlreadyLoggedInException::_PD_repoId,
  BoggledApp::UserNotFoundException::_PD_repoId
};

void _0RL_cd_827d1af9c15327f0_20000000::userException(cdrStream& s, _OMNI_NS(IOP_C)* iop_client, const char* repoId)
{
  if (omni::strMatch(repoId, BoggledApp::AlreadyLoggedInException::_PD_repoId)) {
    BoggledApp::AlreadyLoggedInException _ex;
    _ex <<= s;
    if (iop_client) iop_client->RequestCompleted();
    throw _ex;
  }

  if (omni::strMatch(repoId, BoggledApp::UserNotFoundException::_PD_repoId)) {
    BoggledApp::UserNotFoundException _ex;
    _ex <<= s;
    if (iop_client) iop_client->RequestCompleted();
    throw _ex;
  }


  else {
    if (iop_client) iop_client->RequestCompleted(1);
    OMNIORB_THROW(UNKNOWN,UNKNOWN_UserException,
                  (::CORBA::CompletionStatus)s.completion());
  }
}

// Local call call-back function.
static void
_0RL_lcfn_827d1af9c15327f0_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_827d1af9c15327f0_20000000* tcd = (_0RL_cd_827d1af9c15327f0_20000000*)cd;
  BoggledApp::_impl_Boggled* impl = (BoggledApp::_impl_Boggled*) svnt->_ptrToInterface(BoggledApp::Boggled::_PD_repoId);
#ifdef OMNI_HAS_Cplusplus_catch_exception_by_base
  impl->login(tcd->arg_0, tcd->arg_1);
#else
  if (!cd->is_upcall())
    impl->login(tcd->arg_0, tcd->arg_1);
  else {
    try {
      impl->login(tcd->arg_0, tcd->arg_1);
    }
    catch(BoggledApp::UserNotFoundException& ex) {
      throw omniORB::StubUserException(ex._NP_duplicate());
    }

    catch(BoggledApp::AlreadyLoggedInException& ex) {
      throw omniORB::StubUserException(ex._NP_duplicate());
    }


  }
#endif


}

void BoggledApp::_objref_Boggled::login(const char* username, const char* password)
{
  _0RL_cd_827d1af9c15327f0_20000000 _call_desc(_0RL_lcfn_827d1af9c15327f0_30000000, "login", 6);
  _call_desc.arg_0 = username;
  _call_desc.arg_1 = password;

  _invoke(_call_desc);



}


//
// Code for BoggledApp::Boggled::joinWaitingRoom

// Local call call-back function.
static void
_0RL_lcfn_827d1af9c15327f0_40000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_827d1af9c15327f0_00000000* tcd = (_0RL_cd_827d1af9c15327f0_00000000*)cd;
  BoggledApp::_impl_Boggled* impl = (BoggledApp::_impl_Boggled*) svnt->_ptrToInterface(BoggledApp::Boggled::_PD_repoId);
  impl->joinWaitingRoom(tcd->arg_0);


}

void BoggledApp::_objref_Boggled::joinWaitingRoom(const char* playerName)
{
  _0RL_cd_827d1af9c15327f0_00000000 _call_desc(_0RL_lcfn_827d1af9c15327f0_40000000, "joinWaitingRoom", 16);
  _call_desc.arg_0 = playerName;

  _invoke(_call_desc);



}


//
// Code for BoggledApp::Boggled::say

// Proxy call descriptor class. Mangled signature:
//  _cstring_i_cBoggledApp_mCallback_i_cstring
class _0RL_cd_827d1af9c15327f0_50000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_827d1af9c15327f0_50000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  BoggledApp::Callback_var arg_0_;
  BoggledApp::Callback_ptr arg_0;
  ::CORBA::String_var arg_1_;
  const char* arg_1;
  ::CORBA::String_var result;
};

void _0RL_cd_827d1af9c15327f0_50000000::marshalArguments(cdrStream& _n)
{
  BoggledApp::Callback::_marshalObjRef(arg_0,_n);
  _n.marshalString(arg_1,0);

}

void _0RL_cd_827d1af9c15327f0_50000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = BoggledApp::Callback::_unmarshalObjRef(_n);
  arg_0 = arg_0_.in();
  arg_1_ = _n.unmarshalString(0);
  arg_1 = arg_1_.in();

}

void _0RL_cd_827d1af9c15327f0_50000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalString(result,0);

}

void _0RL_cd_827d1af9c15327f0_50000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalString(0);

}

const char* const _0RL_cd_827d1af9c15327f0_50000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_827d1af9c15327f0_60000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_827d1af9c15327f0_50000000* tcd = (_0RL_cd_827d1af9c15327f0_50000000*)cd;
  BoggledApp::_impl_Boggled* impl = (BoggledApp::_impl_Boggled*) svnt->_ptrToInterface(BoggledApp::Boggled::_PD_repoId);
  tcd->result = impl->say(tcd->arg_0, tcd->arg_1);


}

char* BoggledApp::_objref_Boggled::say(::BoggledApp::Callback_ptr objRef, const char* message)
{
  _0RL_cd_827d1af9c15327f0_50000000 _call_desc(_0RL_lcfn_827d1af9c15327f0_60000000, "say", 4);
  _call_desc.arg_0 = objRef;
  _call_desc.arg_1 = message;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for BoggledApp::Boggled::isGameReadyToStart

// Proxy call descriptor class. Mangled signature:
//  _cboolean
class _0RL_cd_827d1af9c15327f0_70000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_827d1af9c15327f0_70000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Boolean result;
};

void _0RL_cd_827d1af9c15327f0_70000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_827d1af9c15327f0_70000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_827d1af9c15327f0_70000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_827d1af9c15327f0_80000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_827d1af9c15327f0_70000000* tcd = (_0RL_cd_827d1af9c15327f0_70000000*)cd;
  BoggledApp::_impl_Boggled* impl = (BoggledApp::_impl_Boggled*) svnt->_ptrToInterface(BoggledApp::Boggled::_PD_repoId);
  tcd->result = impl->isGameReadyToStart();


}

::CORBA::Boolean BoggledApp::_objref_Boggled::isGameReadyToStart()
{
  _0RL_cd_827d1af9c15327f0_70000000 _call_desc(_0RL_lcfn_827d1af9c15327f0_80000000, "isGameReadyToStart", 19);


  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for BoggledApp::Boggled::getWaitingTime

// Proxy call descriptor class. Mangled signature:
//  _cstring_i_cBoggledApp_mCallback
class _0RL_cd_827d1af9c15327f0_90000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_827d1af9c15327f0_90000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  BoggledApp::Callback_var arg_0_;
  BoggledApp::Callback_ptr arg_0;
  ::CORBA::String_var result;
};

void _0RL_cd_827d1af9c15327f0_90000000::marshalArguments(cdrStream& _n)
{
  BoggledApp::Callback::_marshalObjRef(arg_0,_n);

}

void _0RL_cd_827d1af9c15327f0_90000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = BoggledApp::Callback::_unmarshalObjRef(_n);
  arg_0 = arg_0_.in();

}

void _0RL_cd_827d1af9c15327f0_90000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalString(result,0);

}

void _0RL_cd_827d1af9c15327f0_90000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalString(0);

}

const char* const _0RL_cd_827d1af9c15327f0_90000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_827d1af9c15327f0_a0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_827d1af9c15327f0_90000000* tcd = (_0RL_cd_827d1af9c15327f0_90000000*)cd;
  BoggledApp::_impl_Boggled* impl = (BoggledApp::_impl_Boggled*) svnt->_ptrToInterface(BoggledApp::Boggled::_PD_repoId);
  tcd->result = impl->getWaitingTime(tcd->arg_0);


}

char* BoggledApp::_objref_Boggled::getWaitingTime(::BoggledApp::Callback_ptr objRef)
{
  _0RL_cd_827d1af9c15327f0_90000000 _call_desc(_0RL_lcfn_827d1af9c15327f0_a0000000, "getWaitingTime", 15);
  _call_desc.arg_0 = objRef;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for BoggledApp::Boggled::getWaitingRoomInfo

// Proxy call descriptor class. Mangled signature:
//  _cstring_i_cstring
class _0RL_cd_827d1af9c15327f0_b0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_827d1af9c15327f0_b0000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  const char* arg_0;
  ::CORBA::String_var result;
};

void _0RL_cd_827d1af9c15327f0_b0000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);

}

void _0RL_cd_827d1af9c15327f0_b0000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();

}

void _0RL_cd_827d1af9c15327f0_b0000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalString(result,0);

}

void _0RL_cd_827d1af9c15327f0_b0000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalString(0);

}

const char* const _0RL_cd_827d1af9c15327f0_b0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_827d1af9c15327f0_c0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_827d1af9c15327f0_b0000000* tcd = (_0RL_cd_827d1af9c15327f0_b0000000*)cd;
  BoggledApp::_impl_Boggled* impl = (BoggledApp::_impl_Boggled*) svnt->_ptrToInterface(BoggledApp::Boggled::_PD_repoId);
  tcd->result = impl->getWaitingRoomInfo(tcd->arg_0);


}

char* BoggledApp::_objref_Boggled::getWaitingRoomInfo(const char* playerName)
{
  _0RL_cd_827d1af9c15327f0_b0000000 _call_desc(_0RL_lcfn_827d1af9c15327f0_c0000000, "getWaitingRoomInfo", 19);
  _call_desc.arg_0 = playerName;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for BoggledApp::Boggled::submitWord

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cstring_o_cboolean_o_cboolean_o_cstring
class _0RL_cd_827d1af9c15327f0_d0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_827d1af9c15327f0_d0000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  const char* arg_0;
  ::CORBA::Boolean arg_1;
  ::CORBA::Boolean arg_2;
  ::CORBA::String_var arg_3;
  ::CORBA::Boolean result;
};

void _0RL_cd_827d1af9c15327f0_d0000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);

}

void _0RL_cd_827d1af9c15327f0_d0000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();

}

void _0RL_cd_827d1af9c15327f0_d0000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);
  _n.marshalBoolean(arg_1);
  _n.marshalBoolean(arg_2);
  _n.marshalString(arg_3,0);

}

void _0RL_cd_827d1af9c15327f0_d0000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();
  arg_1 = _n.unmarshalBoolean();
  arg_2 = _n.unmarshalBoolean();
  arg_3 = _n.unmarshalString(0);

}

const char* const _0RL_cd_827d1af9c15327f0_d0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_827d1af9c15327f0_e0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_827d1af9c15327f0_d0000000* tcd = (_0RL_cd_827d1af9c15327f0_d0000000*)cd;
  BoggledApp::_impl_Boggled* impl = (BoggledApp::_impl_Boggled*) svnt->_ptrToInterface(BoggledApp::Boggled::_PD_repoId);
  tcd->result = impl->submitWord(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3.out());


}

::CORBA::Boolean BoggledApp::_objref_Boggled::submitWord(const char* word, ::CORBA::Boolean& isValid, ::CORBA::Boolean& canForm, ::CORBA::String_out response)
{
  _0RL_cd_827d1af9c15327f0_d0000000 _call_desc(_0RL_lcfn_827d1af9c15327f0_e0000000, "submitWord", 11);
  _call_desc.arg_0 = word;

  _invoke(_call_desc);
  isValid = _call_desc.arg_1;
  canForm = _call_desc.arg_2;
  response = _call_desc.arg_3._retn();
  return _call_desc.result;


}


//
// Code for BoggledApp::Boggled::getGameID

// Local call call-back function.
static void
_0RL_lcfn_827d1af9c15327f0_f0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_827d1af9c15327f0_50000000* tcd = (_0RL_cd_827d1af9c15327f0_50000000*)cd;
  BoggledApp::_impl_Boggled* impl = (BoggledApp::_impl_Boggled*) svnt->_ptrToInterface(BoggledApp::Boggled::_PD_repoId);
  tcd->result = impl->getGameID(tcd->arg_0, tcd->arg_1);


}

char* BoggledApp::_objref_Boggled::getGameID(::BoggledApp::Callback_ptr objRef, const char* playerName)
{
  _0RL_cd_827d1af9c15327f0_50000000 _call_desc(_0RL_lcfn_827d1af9c15327f0_f0000000, "getGameID", 10);
  _call_desc.arg_0 = objRef;
  _call_desc.arg_1 = playerName;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for BoggledApp::Boggled::getLetters

// Local call call-back function.
static void
_0RL_lcfn_827d1af9c15327f0_01000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_827d1af9c15327f0_b0000000* tcd = (_0RL_cd_827d1af9c15327f0_b0000000*)cd;
  BoggledApp::_impl_Boggled* impl = (BoggledApp::_impl_Boggled*) svnt->_ptrToInterface(BoggledApp::Boggled::_PD_repoId);
  tcd->result = impl->getLetters(tcd->arg_0);


}

char* BoggledApp::_objref_Boggled::getLetters(const char* gameID)
{
  _0RL_cd_827d1af9c15327f0_b0000000 _call_desc(_0RL_lcfn_827d1af9c15327f0_01000000, "getLetters", 11);
  _call_desc.arg_0 = gameID;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}

BoggledApp::_pof_Boggled::~_pof_Boggled() {}


omniObjRef*
BoggledApp::_pof_Boggled::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::BoggledApp::_objref_Boggled(ior, id);
}


::CORBA::Boolean
BoggledApp::_pof_Boggled::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::BoggledApp::Boggled::_PD_repoId))
    return 1;
  
  return 0;
}

const BoggledApp::_pof_Boggled _the_pof_BoggledApp_mBoggled;

BoggledApp::_impl_Boggled::~_impl_Boggled() {}


::CORBA::Boolean
BoggledApp::_impl_Boggled::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "login")) {

    _0RL_cd_827d1af9c15327f0_20000000 _call_desc(_0RL_lcfn_827d1af9c15327f0_30000000, "login", 6, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "joinWaitingRoom")) {

    _0RL_cd_827d1af9c15327f0_00000000 _call_desc(_0RL_lcfn_827d1af9c15327f0_40000000, "joinWaitingRoom", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "say")) {

    _0RL_cd_827d1af9c15327f0_50000000 _call_desc(_0RL_lcfn_827d1af9c15327f0_60000000, "say", 4, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "isGameReadyToStart")) {

    _0RL_cd_827d1af9c15327f0_70000000 _call_desc(_0RL_lcfn_827d1af9c15327f0_80000000, "isGameReadyToStart", 19, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getWaitingTime")) {

    _0RL_cd_827d1af9c15327f0_90000000 _call_desc(_0RL_lcfn_827d1af9c15327f0_a0000000, "getWaitingTime", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getWaitingRoomInfo")) {

    _0RL_cd_827d1af9c15327f0_b0000000 _call_desc(_0RL_lcfn_827d1af9c15327f0_c0000000, "getWaitingRoomInfo", 19, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "submitWord")) {

    _0RL_cd_827d1af9c15327f0_d0000000 _call_desc(_0RL_lcfn_827d1af9c15327f0_e0000000, "submitWord", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getGameID")) {

    _0RL_cd_827d1af9c15327f0_50000000 _call_desc(_0RL_lcfn_827d1af9c15327f0_f0000000, "getGameID", 10, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getLetters")) {

    _0RL_cd_827d1af9c15327f0_b0000000 _call_desc(_0RL_lcfn_827d1af9c15327f0_01000000, "getLetters", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
BoggledApp::_impl_Boggled::_ptrToInterface(const char* id)
{
  if (id == ::BoggledApp::Boggled::_PD_repoId)
    return (::BoggledApp::_impl_Boggled*) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::BoggledApp::Boggled::_PD_repoId))
    return (::BoggledApp::_impl_Boggled*) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
BoggledApp::_impl_Boggled::_mostDerivedRepoId()
{
  return ::BoggledApp::Boggled::_PD_repoId;
}

POA_BoggledApp::Callback::~Callback() {}

POA_BoggledApp::Boggled::~Boggled() {}

