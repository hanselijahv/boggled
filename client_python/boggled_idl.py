# Python stubs generated by omniidl from boggled.idl
# DO NOT EDIT THIS FILE!

import _omnipy
import omniORB
from omniORB import CORBA, PortableServer

_0_CORBA = CORBA

_omnipy.checkVersion(4, 2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None

#
# Start of module "BoggledApp"
#
__name__ = "BoggledApp"
_0_BoggledApp = omniORB.openModule("BoggledApp", r"boggled.idl")
_0_BoggledApp__POA = omniORB.openModule("BoggledApp__POA", r"boggled.idl")

# exception UserNotFoundException
_0_BoggledApp.UserNotFoundException = omniORB.newEmptyClass()


class UserNotFoundException(CORBA.UserException):
    _NP_RepositoryId = "IDL:BoggledApp/UserNotFoundException:1.0"

    def __init__(self, reason):
        CORBA.UserException.__init__(self, reason)
        self.reason = reason


_0_BoggledApp.UserNotFoundException = UserNotFoundException
_0_BoggledApp._d_UserNotFoundException = (
omniORB.tcInternal.tv_except, UserNotFoundException, UserNotFoundException._NP_RepositoryId, "UserNotFoundException",
"reason", (omniORB.tcInternal.tv_string, 0))
_0_BoggledApp._tc_UserNotFoundException = omniORB.tcInternal.createTypeCode(_0_BoggledApp._d_UserNotFoundException)
omniORB.registerType(UserNotFoundException._NP_RepositoryId, _0_BoggledApp._d_UserNotFoundException,
                     _0_BoggledApp._tc_UserNotFoundException)
del UserNotFoundException

# exception AlreadyLoggedInException
_0_BoggledApp.AlreadyLoggedInException = omniORB.newEmptyClass()


class AlreadyLoggedInException(CORBA.UserException):
    _NP_RepositoryId = "IDL:BoggledApp/AlreadyLoggedInException:1.0"

    def __init__(self, reason):
        CORBA.UserException.__init__(self, reason)
        self.reason = reason


_0_BoggledApp.AlreadyLoggedInException = AlreadyLoggedInException
_0_BoggledApp._d_AlreadyLoggedInException = (
omniORB.tcInternal.tv_except, AlreadyLoggedInException, AlreadyLoggedInException._NP_RepositoryId,
"AlreadyLoggedInException", "reason", (omniORB.tcInternal.tv_string, 0))
_0_BoggledApp._tc_AlreadyLoggedInException = omniORB.tcInternal.createTypeCode(
    _0_BoggledApp._d_AlreadyLoggedInException)
omniORB.registerType(AlreadyLoggedInException._NP_RepositoryId, _0_BoggledApp._d_AlreadyLoggedInException,
                     _0_BoggledApp._tc_AlreadyLoggedInException)
del AlreadyLoggedInException

# exception InsufficientPlayerException
_0_BoggledApp.InsufficientPlayerException = omniORB.newEmptyClass()


class InsufficientPlayerException(CORBA.UserException):
    _NP_RepositoryId = "IDL:BoggledApp/InsufficientPlayerException:1.0"

    def __init__(self, reason):
        CORBA.UserException.__init__(self, reason)
        self.reason = reason


_0_BoggledApp.InsufficientPlayerException = InsufficientPlayerException
_0_BoggledApp._d_InsufficientPlayerException = (
omniORB.tcInternal.tv_except, InsufficientPlayerException, InsufficientPlayerException._NP_RepositoryId,
"InsufficientPlayerException", "reason", (omniORB.tcInternal.tv_string, 0))
_0_BoggledApp._tc_InsufficientPlayerException = omniORB.tcInternal.createTypeCode(
    _0_BoggledApp._d_InsufficientPlayerException)
omniORB.registerType(InsufficientPlayerException._NP_RepositoryId, _0_BoggledApp._d_InsufficientPlayerException,
                     _0_BoggledApp._tc_InsufficientPlayerException)
del InsufficientPlayerException

# interface Callback
_0_BoggledApp._d_Callback = (omniORB.tcInternal.tv_objref, "IDL:BoggledApp/Callback:1.0", "Callback")
omniORB.typeMapping["IDL:BoggledApp/Callback:1.0"] = _0_BoggledApp._d_Callback
_0_BoggledApp.Callback = omniORB.newEmptyClass()


class Callback:
    _NP_RepositoryId = _0_BoggledApp._d_Callback[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_BoggledApp.Callback = Callback
_0_BoggledApp._tc_Callback = omniORB.tcInternal.createTypeCode(_0_BoggledApp._d_Callback)
omniORB.registerType(Callback._NP_RepositoryId, _0_BoggledApp._d_Callback, _0_BoggledApp._tc_Callback)

# Callback operations and attributes
Callback._d_notify = (((omniORB.tcInternal.tv_string, 0),), (), None)


# Callback object reference
class _objref_Callback(CORBA.Object):
    _NP_RepositoryId = Callback._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def notify(self, *args):
        return self._obj.invoke("notify", _0_BoggledApp.Callback._d_notify, args)


omniORB.registerObjref(Callback._NP_RepositoryId, _objref_Callback)
_0_BoggledApp._objref_Callback = _objref_Callback
del Callback, _objref_Callback

# Callback skeleton
__name__ = "BoggledApp__POA"


class Callback(PortableServer.Servant):
    _NP_RepositoryId = _0_BoggledApp.Callback._NP_RepositoryId

    _omni_op_d = {"notify": _0_BoggledApp.Callback._d_notify}


Callback._omni_skeleton = Callback
_0_BoggledApp__POA.Callback = Callback
omniORB.registerSkeleton(Callback._NP_RepositoryId, Callback)
del Callback
__name__ = "BoggledApp"

# interface Boggled
_0_BoggledApp._d_Boggled = (omniORB.tcInternal.tv_objref, "IDL:BoggledApp/Boggled:1.0", "Boggled")
omniORB.typeMapping["IDL:BoggledApp/Boggled:1.0"] = _0_BoggledApp._d_Boggled
_0_BoggledApp.Boggled = omniORB.newEmptyClass()


class Boggled:
    _NP_RepositoryId = _0_BoggledApp._d_Boggled[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_BoggledApp.Boggled = Boggled
_0_BoggledApp._tc_Boggled = omniORB.tcInternal.createTypeCode(_0_BoggledApp._d_Boggled)
omniORB.registerType(Boggled._NP_RepositoryId, _0_BoggledApp._d_Boggled, _0_BoggledApp._tc_Boggled)

# Boggled operations and attributes
Boggled._d_login = (((omniORB.tcInternal.tv_string, 0), (omniORB.tcInternal.tv_string, 0)), (),
                    {_0_BoggledApp.UserNotFoundException._NP_RepositoryId: _0_BoggledApp._d_UserNotFoundException,
                     _0_BoggledApp.AlreadyLoggedInException._NP_RepositoryId: _0_BoggledApp._d_AlreadyLoggedInException})
Boggled._d_joinWaitingRoom = (((omniORB.tcInternal.tv_string, 0),), (), None)
Boggled._d_say = ((omniORB.typeMapping["IDL:BoggledApp/Callback:1.0"], (omniORB.tcInternal.tv_string, 0)),
                  ((omniORB.tcInternal.tv_string, 0),), None)
Boggled._d_isGameReadyToStart = ((), (omniORB.tcInternal.tv_boolean,), None)
Boggled._d_getWaitingTime = (
(omniORB.typeMapping["IDL:BoggledApp/Callback:1.0"],), ((omniORB.tcInternal.tv_string, 0),), None)
Boggled._d_getWaitingRoomInfo = (((omniORB.tcInternal.tv_string, 0),), ((omniORB.tcInternal.tv_string, 0),), None)
Boggled._d_submitWord = (((omniORB.tcInternal.tv_string, 0),), (
omniORB.tcInternal.tv_boolean, omniORB.tcInternal.tv_boolean, omniORB.tcInternal.tv_boolean,
(omniORB.tcInternal.tv_string, 0)), None)
Boggled._d_getGameID = ((omniORB.typeMapping["IDL:BoggledApp/Callback:1.0"], (omniORB.tcInternal.tv_string, 0)),
                        ((omniORB.tcInternal.tv_string, 0),), None)
Boggled._d_getLetters = (((omniORB.tcInternal.tv_string, 0),), ((omniORB.tcInternal.tv_string, 0),), None)


# Boggled object reference
class _objref_Boggled(CORBA.Object):
    _NP_RepositoryId = Boggled._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def login(self, *args):
        return self._obj.invoke("login", _0_BoggledApp.Boggled._d_login, args)

    def joinWaitingRoom(self, *args):
        return self._obj.invoke("joinWaitingRoom", _0_BoggledApp.Boggled._d_joinWaitingRoom, args)

    def say(self, *args):
        return self._obj.invoke("say", _0_BoggledApp.Boggled._d_say, args)

    def isGameReadyToStart(self, *args):
        return self._obj.invoke("isGameReadyToStart", _0_BoggledApp.Boggled._d_isGameReadyToStart, args)

    def getWaitingTime(self, *args):
        return self._obj.invoke("getWaitingTime", _0_BoggledApp.Boggled._d_getWaitingTime, args)

    def getWaitingRoomInfo(self, *args):
        return self._obj.invoke("getWaitingRoomInfo", _0_BoggledApp.Boggled._d_getWaitingRoomInfo, args)

    def submitWord(self, *args):
        return self._obj.invoke("submitWord", _0_BoggledApp.Boggled._d_submitWord, args)

    def getGameID(self, *args):
        return self._obj.invoke("getGameID", _0_BoggledApp.Boggled._d_getGameID, args)

    def getLetters(self, *args):
        return self._obj.invoke("getLetters", _0_BoggledApp.Boggled._d_getLetters, args)


omniORB.registerObjref(Boggled._NP_RepositoryId, _objref_Boggled)
_0_BoggledApp._objref_Boggled = _objref_Boggled
del Boggled, _objref_Boggled

# Boggled skeleton
__name__ = "BoggledApp__POA"


class Boggled(PortableServer.Servant):
    _NP_RepositoryId = _0_BoggledApp.Boggled._NP_RepositoryId

    _omni_op_d = {"login": _0_BoggledApp.Boggled._d_login, "joinWaitingRoom": _0_BoggledApp.Boggled._d_joinWaitingRoom,
                  "say": _0_BoggledApp.Boggled._d_say,
                  "isGameReadyToStart": _0_BoggledApp.Boggled._d_isGameReadyToStart,
                  "getWaitingTime": _0_BoggledApp.Boggled._d_getWaitingTime,
                  "getWaitingRoomInfo": _0_BoggledApp.Boggled._d_getWaitingRoomInfo,
                  "submitWord": _0_BoggledApp.Boggled._d_submitWord, "getGameID": _0_BoggledApp.Boggled._d_getGameID,
                  "getLetters": _0_BoggledApp.Boggled._d_getLetters}


Boggled._omni_skeleton = Boggled
_0_BoggledApp__POA.Boggled = Boggled
omniORB.registerSkeleton(Boggled._NP_RepositoryId, Boggled)
del Boggled
__name__ = "BoggledApp"

#
# End of module "BoggledApp"
#
__name__ = "boggled_idl"

_exported_modules = ("BoggledApp",)

# The end.
